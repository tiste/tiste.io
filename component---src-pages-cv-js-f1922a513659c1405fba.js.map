{"version":3,"sources":["webpack://www/./src/components/layouts/Footer.js","webpack://www/./src/components/layouts/Nav.js","webpack://www/./src/components/sections/customers.js","webpack://www/./src/components/sections/resume.js","webpack://www/./src/pages/cv.js"],"names":["Footer","className","S","src","alt","placeholder","width","Nav","useState","navIsOpened","setNavIsOpened","role","aria-label","Link","to","layout","height","onClick","aria-hidden","Customers","StaticQuery","query","render","data","CustomersSection","getCustomers","colorMode","allFile","edges","filter","node","name","endsWith","map","i","key","G","image","childImageSharp","gatsbyImageData","Resume","props","ResumeSection","crop","dangerouslySetInnerHTML","__html","markdownRemark","html","CVPage","title"],"mappings":"y4GAGO,SAASA,IACd,OACE,0BAAQC,UAAU,uBAChB,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,uBACb,uBAAKA,UAAU,iCACb,gBAAC,EAAAC,EAAD,CACEC,IAAI,wBACJC,IAAI,YACJC,YAAY,UACZC,MAAO,IAJT,4B,mGCLL,SAASC,IAAO,IAAD,GACkBC,eAAS,GAAxCC,EADa,KACAC,EADA,KAOpB,OACE,uBAAKT,UAAU,SAASU,KAAK,aAAaC,aAAW,mBACnD,uBAAKX,UAAU,aACb,uBAAKA,UAAU,gBACb,gBAAC,EAAAY,KAAD,CAAMZ,UAAU,cAAca,GAAG,KAC/B,gBAAC,EAAAZ,EAAD,CACEC,IAAI,2BACJC,IAAI,OACJC,YAAY,UACZU,OAAO,QACPT,MAAO,GACPU,OAAQ,GANV,sBAUF,uBACEf,UAAU,uBACVU,KAAK,eACLM,QAAS,WArBjBP,GAAgBD,KAuBR,wBAAMS,cAAY,SAClB,wBAAMA,cAAY,SAClB,wBAAMA,cAAY,WAItB,uBAAKjB,UAAW,gBAAkBQ,EAAc,YAAc,KAC5D,uBAAKR,UAAU,gBACb,gBAAC,EAAAY,KAAD,CAAMZ,UAAU,cAAca,GAAG,KAAjC,WAGA,gBAAC,EAAAD,KAAD,CAAMZ,UAAU,cAAca,GAAG,OAAjC,sB,oGCtCG,SAASK,IAuBtB,OACE,gBAAC,EAAAC,YAAD,CACEC,MAxBa,aAyBbC,OAAQ,SAACC,GAAD,OAAU,gBAACC,EAAD,CAAkBD,KAAMA,OAKhD,SAASE,EAAaF,EAAMG,GAC1B,OAAOH,EAAKI,QAAQC,MACjBC,QAAO,qBAAGC,KAAgBC,KAAKC,SAASN,MACxCO,KAAI,WAAWC,GAAX,IAAGJ,EAAH,EAAGA,KAAH,OACH,uBAAKK,IAAKD,EAAGjC,UAAU,kCACrB,gBAAC,EAAAmC,EAAD,CACEC,MAAOP,EAAKQ,gBAAgBC,gBAC5BnC,IAAK0B,EAAKC,WAMpB,SAASP,EAAT,GAAqC,IAATD,EAAQ,EAARA,KAC1B,OACE,2BAAStB,UAAU,WACjB,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,6DACZwB,EAAaF,EAAM,UAGtB,uBAAKtB,UAAU,4DACZwB,EAAaF,EAAM,a,0FCtDf,SAASiB,EAAOC,GAS7B,OACE,gBAAC,EAAArB,YAAD,CACEC,MAVa,aAWbC,OAAQ,SAACC,GAAD,OAAU,gBAACmB,EAAD,eAAenB,KAAMA,GAAUkB,OAKvD,SAASC,EAAT,GAAwC,IAAfnB,EAAc,EAAdA,KAAMoB,EAAQ,EAARA,KAC7B,OACE,2BAAS1C,UAAU,WACjB,uBAAKA,UAAU,qBACb,0CACe,gDAGf,uBACEA,UAAW,WAAa0C,EAAO,aAAe,IAC9CC,wBAAyB,CAAEC,OAAQtB,EAAKuB,eAAeC,SAG1DJ,GACC,uBAAK1C,UAAU,qBACb,gBAAC,EAAAY,KAAD,CAAMZ,UAAU,8BAA8Ba,GAAG,OAAjD,gC,8IC5BK,SAASkC,IACtB,OACE,gBAAC,IAAD,CAAQC,MAAM,8BACZ,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD","file":"component---src-pages-cv-js-f1922a513659c1405fba.js","sourcesContent":["import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nexport function Footer() {\n  return (\n    <footer className=\"footer section-gray\">\n      <div className=\"container content\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-4 has-text-centered\">\n            <StaticImage\n              src=\"../../images/logo.svg\"\n              alt=\"Full logo\"\n              placeholder=\"blurred\"\n              width={250}\n            />\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nexport function Nav() {\n  const [navIsOpened, setNavIsOpened] = useState(false);\n\n  function toggleNav() {\n    setNavIsOpened(!navIsOpened);\n  }\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link className=\"navbar-item\" to=\"/\">\n            <StaticImage\n              src=\"../../images/favicon.svg\"\n              alt=\"Logo\"\n              placeholder=\"blurred\"\n              layout=\"fixed\"\n              width={68}\n              height={68}\n            />\n          </Link>\n\n          <div\n            className=\"navbar-burger burger\"\n            role=\"presentation\"\n            onClick={() => toggleNav()}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </div>\n        </div>\n\n        <div className={\"navbar-menu \" + (navIsOpened ? \"is-active\" : \"\")}>\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/\">\n              Accueil\n            </Link>\n            <Link className=\"navbar-item\" to=\"/cv\">\n              Mes missions\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport default function Customers() {\n  const staticQuery = graphql`\n    {\n      allFile(\n        filter: { relativePath: { glob: \"customers/*\" } }\n        sort: { fields: name }\n      ) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              gatsbyImageData(\n                width: 250\n                layout: CONSTRAINED\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n  `;\n\n  return (\n    <StaticQuery\n      query={`${staticQuery}`}\n      render={(data) => <CustomersSection data={data} />}\n    />\n  );\n}\n\nfunction getCustomers(data, colorMode) {\n  return data.allFile.edges\n    .filter(({ node }) => node.name.endsWith(colorMode))\n    .map(({ node }, i) => (\n      <div key={i} className=\"column is-4-mobile is-2-tablet\">\n        <GatsbyImage\n          image={node.childImageSharp.gatsbyImageData}\n          alt={node.name}\n        />\n      </div>\n    ));\n}\n\nfunction CustomersSection({ data }) {\n  return (\n    <section className=\"section\">\n      <div className=\"container content\">\n        <div className=\"columns is-vcentered is-multiline is-mobile is-light-mode\">\n          {getCustomers(data, \"light\")}\n        </div>\n\n        <div className=\"columns is-vcentered is-multiline is-mobile is-dark-mode\">\n          {getCustomers(data, \"dark\")}\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { graphql, Link, StaticQuery } from \"gatsby\";\n\nexport default function Resume(props) {\n  const staticQuery = graphql`\n    query {\n      markdownRemark(frontmatter: { slug: { eq: \"cv\" } }) {\n        html\n      }\n    }\n  `;\n\n  return (\n    <StaticQuery\n      query={`${staticQuery}`}\n      render={(data) => <ResumeSection data={data} {...props} />}\n    />\n  );\n}\n\nfunction ResumeSection({ data, crop }) {\n  return (\n    <section className=\"section\">\n      <div className=\"container content\">\n        <h2>\n          Mon parcours <strong>professionnel</strong>\n        </h2>\n\n        <div\n          className={\"resume \" + (crop ? \"is-cropped\" : \"\")}\n          dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n        />\n      </div>\n      {crop && (\n        <div className=\"has-text-centered\">\n          <Link className=\"button is-primary is-medium\" to=\"/cv\">\n            Voir les autres missions\n          </Link>\n        </div>\n      )}\n    </section>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layouts/Layout\";\nimport ResumeSection from \"../components/sections/resume\";\nimport CustomersSection from \"../components/sections/customers\";\nimport { Footer } from \"../components/layouts/Footer\";\nimport { Nav } from \"../components/layouts/Nav\";\n\nexport default function CVPage() {\n  return (\n    <Layout title=\"ExpÃ©rience professionnelle\">\n      <Nav />\n      <ResumeSection />\n      <CustomersSection />\n      <Footer />\n    </Layout>\n  );\n}\n"],"sourceRoot":""}