{"version":3,"sources":["webpack://www/./src/components/layouts/Footer.js","webpack://www/./src/components/sections/customers.js","webpack://www/./src/templates/mission.js"],"names":["Footer","className","S","src","alt","placeholder","width","CustomersSection","StaticQuery","query","render","data","CustomersComponent","getCustomers","colorMode","filter","allFile","edges","node","name","endsWith","toLowerCase","includes","substr","map","i","key","Link","to","split","G","image","childImageSharp","gatsbyImageData","MissionPage","pageContext","title","customer","date","dangerouslySetInnerHTML","__html","description","replace"],"mappings":"knGAGO,SAASA,IACd,OACE,0BAAQC,UAAU,uBAChB,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,uBACb,uBAAKA,UAAU,iCACb,gBAAC,EAAAC,EAAD,CACED,UAAU,gBACVE,IAAI,wBACJC,IAAI,YACJC,YAAY,UACZC,MAAO,IALT,sBAOA,gBAAC,EAAAJ,EAAD,CACED,UAAU,eACVE,IAAI,8BACJC,IAAI,YACJC,YAAY,UACZC,MAAO,IALT,4B,2HCZL,SAASC,IAuBd,OACE,gBAAC,EAAAC,YAAD,CACEC,MAxBa,aAyBbC,OAAQ,SAACC,GAAD,OAAU,gBAACC,EAAD,CAAoBD,KAAMA,OAK3C,SAASE,EAAaF,EAAMG,EAAWC,GAC5C,YADyD,IAAbA,MAAS,IAC9CJ,EAAKK,QAAQC,MACjBF,QAAO,qBAAGG,KAAgBC,KAAKC,SAASN,MACxCC,QAAO,qBAAGG,KACJC,KAAKE,cAAcC,SAASP,EAAOQ,OAAO,EAAG,GAAGF,kBAEtDG,KAAI,WAAWC,GAAX,IAAGP,EAAH,EAAGA,KAAH,OACH,uBAAKQ,IAAKD,EAAGxB,UAAU,kCACrB,gBAAC,EAAA0B,KAAD,CAAMC,GAAE,IAAMV,EAAKC,KAAKU,MAAM,KAAK,IACjC,gBAAC,EAAAC,EAAD,CACEC,MAAOb,EAAKc,gBAAgBC,gBAC5B7B,IAAKc,EAAKC,YAOtB,SAASP,EAAT,GAAuC,IAATD,EAAQ,EAARA,KAC5B,OACE,2BAASV,UAAU,WACjB,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,6DACZY,EAAaF,EAAM,UAGtB,uBAAKV,UAAU,4DACZY,EAAaF,EAAM,a,oICvDf,SAASuB,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,YAAaxB,EAAQ,EAARA,KACjD,OACE,gBAAC,IAAD,CAAQyB,MAAUD,EAAYE,SAAjB,MAA+BF,EAAYC,OACtD,gBAAC,IAAD,MACA,2BAASnC,UAAU,gBACjB,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,wCACb,uBAAKA,UAAU,kBACZY,OAAaF,EAAM,QAASwB,EAAYE,WAG3C,uBAAKpC,UAAU,iBACZY,OAAaF,EAAM,OAAQwB,EAAYE,WAG1C,sBAAIpC,UAAU,SAASkC,EAAYE,UACnC,qBAAGpC,UAAU,iBAAiBkC,EAAYC,OAC1C,qBAAGnC,UAAU,iBAAiBkC,EAAYG,UAMlD,2BAASrC,UAAU,gBACjB,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,2BACb,uBACEA,UAAU,YACVsC,wBAAyB,CACvBC,OAAQL,EAAYM,YACjBC,QAAQ,KAAM,IACdA,QAAQ,MAAO,iBAO9B,gBAAC,IAAD","file":"component---src-templates-mission-js-31a82cc265257b5736f1.js","sourcesContent":["import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nexport function Footer() {\n  return (\n    <footer className=\"footer section-gray\">\n      <div className=\"container content\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-4 has-text-centered\">\n            <StaticImage\n              className=\"is-light-mode\"\n              src=\"../../images/logo.svg\"\n              alt=\"Full logo\"\n              placeholder=\"blurred\"\n              width={250}\n            />\n            <StaticImage\n              className=\"is-dark-mode\"\n              src=\"../../images/logo-white.svg\"\n              alt=\"Full logo\"\n              placeholder=\"blurred\"\n              width={250}\n            />\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { graphql, Link, StaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nexport function CustomersSection() {\n  const staticQuery = graphql`\n    {\n      allFile(\n        filter: { relativePath: { glob: \"customers/*\" } }\n        sort: { fields: name }\n      ) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              gatsbyImageData(\n                width: 250\n                layout: CONSTRAINED\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n  `;\n\n  return (\n    <StaticQuery\n      query={`${staticQuery}`}\n      render={(data) => <CustomersComponent data={data} />}\n    />\n  );\n}\n\nexport function getCustomers(data, colorMode, filter = \"\") {\n  return data.allFile.edges\n    .filter(({ node }) => node.name.endsWith(colorMode))\n    .filter(({ node }) =>\n      node.name.toLowerCase().includes(filter.substr(0, 4).toLowerCase())\n    )\n    .map(({ node }, i) => (\n      <div key={i} className=\"column is-4-mobile is-2-tablet\">\n        <Link to={`/${node.name.split(\".\")[0]}`}>\n          <GatsbyImage\n            image={node.childImageSharp.gatsbyImageData}\n            alt={node.name}\n          />\n        </Link>\n      </div>\n    ));\n}\n\nfunction CustomersComponent({ data }) {\n  return (\n    <section className=\"section\">\n      <div className=\"container content\">\n        <div className=\"columns is-vcentered is-multiline is-mobile is-light-mode\">\n          {getCustomers(data, \"light\")}\n        </div>\n\n        <div className=\"columns is-vcentered is-multiline is-mobile is-dark-mode\">\n          {getCustomers(data, \"dark\")}\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { Layout } from \"../components/layouts/Layout\";\nimport { Footer } from \"../components/layouts/Footer\";\nimport { Nav } from \"../components/layouts/Nav\";\nimport { graphql } from \"gatsby\";\nimport { getCustomers } from \"../components/sections/customers\";\n\nexport default function MissionPage({ pageContext, data }) {\n  return (\n    <Layout title={`${pageContext.customer} / ${pageContext.title}`}>\n      <Nav />\n      <section className=\"section mt-6\">\n        <div className=\"container content\">\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n              <div className=\"is-light-mode\">\n                {getCustomers(data, \"light\", pageContext.customer)}\n              </div>\n\n              <div className=\"is-dark-mode\">\n                {getCustomers(data, \"dark\", pageContext.customer)}\n              </div>\n\n              <h2 className=\"title\">{pageContext.customer}</h2>\n              <p className=\"is-4 subtitle\">{pageContext.title}</p>\n              <p className=\"is-5 subtitle\">{pageContext.date}</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"section pt-0\">\n        <div className=\"container content\">\n          <div className=\"columns\">\n            <div className=\"column is-8 is-offset-2\">\n              <div\n                className=\"is-size-3\"\n                dangerouslySetInnerHTML={{\n                  __html: pageContext.description\n                    .replace(\"\\n\", \"\")\n                    .replace(/\\n/g, \"<br />\"),\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query Mission {\n    allFile(\n      filter: { relativePath: { glob: \"customers/*\" } }\n      sort: { fields: name }\n    ) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            gatsbyImageData(\n              width: 250\n              layout: CONSTRAINED\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}